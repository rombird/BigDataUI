package Ch08.ex;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class 문제2 {
	// DB CONN DATA
	private static String id = "root";
	private static String pw = "1234";
	private static String url = "jdbc:mysql://localhost:3306/opendatadb";

	// JDBC참조변수
	private static Connection conn = null; // DBMS 의 특정 DB와 연결되는 객체
	private static PreparedStatement pstmt = null; // SQL Query 전송용 객체
	private static ResultSet rs = null; // Select 결과물 담을 객체
	
	// DB 연결처리
	// Exception <- SQLException의 상위클래스
	// throws Exception : 예외가 발생했을때 main으로 던진다(try - Exception을 처리하고 있는 곳)
	public static void conn() throws Exception {
		Class.forName("com.mysql.cj.jdbc.Driver");
		System.out.println("Driver Loading Success...");
		conn = DriverManager.getConnection(url, id, pw);
		System.out.println("DB CONNECTED...");
	}
	
	
//	public static List<BookDto> selectAll() throws SQLException {
//		// select 쿼리문
//		pstmt = conn.prepareStatement("SELECT * FROM tbl_book");
//		// select쿼리문 실행
//		rs = pstmt.executeQuery();
////
////		// 데이터를 담아서 보관
//		List<BookDto> list = new ArrayList();
//		BookDto dto = null; // 각 행이 BookDto dto로 저장됨
//		if (rs != null) {
//			while (rs.next()) { // 한행씩 내려가면서 확인됨
//				dto = new BookDto();
//				dto.setBookCode(rs.getLong("bookCode")); 
//				dto.setBookName(rs.getString("bookName"));
//				dto.setPublisher(rs.getString("publisher"));
//				dto.setIsbn(rs.getString("isbn"));
//				list.add(dto);
////				System.out.print(rs.getInt("bookCode")+" ");
////				System.out.print(rs.getString("bookName")+" ");
////				System.out.print(rs.getString("publisher")+" ");
////				System.out.println(rs.getString("isbn"));
//
//			}
//		}
//
//		return list;
//	}

	public static BookDto select(Long bookCode) throws SQLException {
		// bookCode의 ?에 해당하는 값을 찾아 select
		pstmt = conn.prepareStatement("SELECT * FROM tbl_book where bookCode=?");
		pstmt.setLong(1, bookCode); // bookCode=1인 bookCode를 전달
		rs = pstmt.executeQuery();
		// 단일행이라 selectall 처럼 list를 묶을 필요 X 
		BookDto dto = null;
		if (rs != null) {
			rs.next(); // 커서의 값은 속성에 있는데 커서 한번이동
			dto = new BookDto();
			dto.setBookCode(rs.getLong("bookCode"));
			dto.setBookName(rs.getString("bookName"));
			dto.setPublisher(rs.getString("publisher"));
			dto.setIsbn(rs.getString("isbn"));
		}
		return dto;
	}

//	public static int insertBook(BookDto bookDto) throws SQLException {
//		// insert 쿼리문 
//		pstmt = conn.prepareStatement("insert into tbl_book values(?,?,?,?)");
//		pstmt.setLong(1, bookDto.getBookCode()); // 첫번째 속성
//		pstmt.setString(2, bookDto.getBookName()); // 두번째 속성
//		pstmt.setString(3, bookDto.getPublisher()); // 세번째 속성
//		pstmt.setString(4, bookDto.getIsbn()); // 네번째 속성
//		// 실행 - sql를 dbms로 전달
//		int result = pstmt.executeUpdate();
//
//		return result;
//	}

	public static int updateBook(BookDto bookDto) throws SQLException {
		pstmt = conn.prepareStatement("update tbl_book set bookName=?,publisher=?,isbn=? where bookCode=?");
		
		pstmt.setString(1, bookDto.getBookName()); // 첫번째 ?위치
		pstmt.setString(2, bookDto.getPublisher()); // 두번째 ?위치
		pstmt.setString(3, bookDto.getIsbn()); 
		pstmt.setLong(4, bookDto.getBookCode());
		//
		int result = pstmt.executeUpdate();

		return result;
	}
//
//	public static int deleteBook(BookDto bookDto) throws SQLException {
//		pstmt = conn.prepareStatement("delete from tbl_book where bookCode=?");
//		pstmt.setLong(1, bookDto.getBookCode());	
//		//
//		int result = pstmt.executeUpdate();
//		return result;
//	}

	public static void main(String[] args) {
		try {
			// DBCONN
			conn();

			// TX START
//			conn.setAutoCommit(false);

			// INSERT
//			insertBook(new BookDto(1L, "도서명1", "출판사명1", "isbn-1"));
//			insertBook(new BookDto(2L, "도서명1", "출판사명1", "isbn-1"));
//			insertBook(new BookDto(3L, "도서명1", "출판사명1", "isbn-1"));
//			insertBook(new BookDto(4L, "도서명1", "출판사명1", "isbn-1"));

//			// SELECTALL
//			List<BookDto> allBook = selectAll();
//			System.out.println("SelectAll : ");
//			allBook.forEach(System.out::println);

//			// SELECT
			BookDto dto = select(1L);
			System.out.println("select : " + dto);

//			// UPDATE
			dto.setBookName("수정도서명-2");
			dto.setPublisher("수정출판사명-2");
			int r1 = updateBook(dto); // bookCode가 1인 행 전달됨
			if (r1 > 0)
				System.out.println("수정완료 : " + r1);
//
//			// DELETE
//			int r2 = deleteBook(dto);
//			if (r2 > 0)
//				System.out.println("삭제완료 : " + r2);
////
//			//TX END
//			conn.commit();
		} catch (Exception e) {
//			// TX ROLLBACKALL
//			try{conn.rollback();}catch(Exception e2) {}
		} finally {
			//자원제거
//			try{rs.close();}catch(Exception e3) {}
//			try{pstmt.close();}catch(Exception e3) {}
//			try{conn.close();}catch(Exception e3) {}
		}

	}

}
